#
# /etc/cumulus/switchd.conf - switchd configuration file
#

# Statistic poll interval (in msec)
#stats.poll_interval = 2000

# Buffer utilization poll interval (in msec), 0 means disable
#buf_util.poll_interval = 0

# Buffer utilization measurement interval (in mins)
#buf_util.measure_interval = 0

# Optimize ACL HW resources for better utilization
#acl.optimize_hw = FALSE

# Enable Flow based mirroring.
#acl.flow_based_mirroring = TRUE

# Enable non atomic acl update
acl.non_atomic_update_mode = FALSE

# Send ARPs for next hops
#arp.next_hops = TRUE

# Kernel routing table ID, range 1 - 2^31, default 254
#route.table = 254

# Maximum hardware neighbor table occupancy (percent of hardware table size)
#route.host_max_percent = 100

# Coalescing reduction factor for accumulating changes to reduce CPU load
#coalescing.reducer = 1

# Coalescing time limit, in seconds
#coalescing.timeout = 10

# Ignore routes that point to non-swp interfaces
ignore_non_swps = TRUE

# Disables restart after parity error
#disable_internal_parity_restart = TRUE

# Disables restart after an unrecoverable hardware error
#disable_internal_hw_err_restart = FALSE

# NAT configuration
# Enables NAT
#nat.static_enable = TRUE
#nat.dynamic_enable = TRUE

# NAT age poll interval in minute(s) {minimum=1m, maximum=24h}
# Note: Configuration is allowed only when nat.dynamic_enable is enabled
#nat.age_poll_interval = 5

# NAT table size limits in number of entries
# Note: Configuration is allowed only when nat.dynamic_enable is enabled
# table_size
# config_table_size
#nat.table_size = 1024
#nat.config_table_size = 64

# Log messages using the given BACKEND=LEVEL,
# space separate multiple BACKEND=LEVEL pairs.
# BACKEND := {stderr, file:filename, syslog, program:executable},
# LEVEL := {CRIT, ERR, WARN, INFO, DEBUG}
# Prior to Cumulus Linux 2.5.4, file:/var/log/switchd.log=INFO was the default
logging = syslog=INFO

# Storm Control setting on a port, in pps, 0 means disable
#interface.swp1.storm_control.broadcast = 400
#interface.swp1.storm_control.multicast = 3000
#interface.swp1.storm_control.unknown_unicast = 2000

# Enable HW statistics
# level specifies type of stats needed per-hw resource type.
# LEVEL := {NONE, BRIEF, DETAIL}
#stats.vlan.aggregate = BRIEF
#stats.vxlan.aggregate = DETAIL
#stats.vxlan.member = BRIEF

#stats.vlan.show_internal_vlans = FALSE

# Virtual devices hw-stat poll interval (in seconds)
#stats.vdev_hw_poll_interval = 5

# Internal VLAN range
# minimum range size is 2
#resv_vlan_range = 3725-3999

# Netlink
# netlink socket buf size (130 * 1024 * 1024 = 130MB)
#netlink.buf_size=136314880

# delete routes on interfaces when carrier is down
#route.delete_dead_routes = TRUE

# default TTL to use in vxlan header
#vxlan.default_ttl = 64

# bridge broadcast frame to cpu even if SVI is not enabled
#bridge.broadcast_frame_to_cpu = FALSE

#IGMP snooping unregistered L2 multicast flood control
#
#Initialize prune module:
#bridge.unreg_mcast_init = FALSE
#
#Note:
#Below configuration allowed only when bridge.unreg_mcast_init is set to TRUE
#
#Set below to TRUE to enable unregistered L2 multicast prune to mrouter ports.
#Default is to flood the unregistered L2 multicast
#
#bridge.unreg_v4_mcast_prune = FALSE
#bridge.unreg_v6_mcast_prune = FALSE

#netlink libnl logger [0-5]
#netlink.nl_logger = 0

# default vxlan outer dscp action during encap
# {copy | set | derive}
# copy: only if inner packet is IP
# set: to specific value
# derive: from switch priority
#vxlan.def_encap_dscp_action = derive

# default vxlan encap dscp value, only applicable if action is 'set'
#vxlan.def_encap_dscp_value =

# default vxlan decap dscp/cos action
# {copy | preserve | derive}
# copy: only if inner packet is IP
# preserve: inner dscp unchanged
# derive: from switch priority
#vxlan.def_decap_dscp_action = derive

# Enable send unknown ipmc to CPU
#ipmulticast.unknown_ipmc_to_cpu = FALSE

#enable ptp time stamping
ptp.timestamping = TRUE

#dynamic vrf route leak enable
#vrf_route_leak_enable_dynamic = FALSE

#event queue depth value
#sync_queue_depth_val = 50000

# configure a route instead of a neighbor with the same ip/mask
#route.route_preferred_over_neigh = TRUE

# JvB: commented in
evpn.multihoming.enable=TRUE
#evpn.multihoming.shared_l2_groups=FALSE
#evpn.multihoming.shared_l3_groups=FALSE

# frequent link flap protection:
# setting a link to protodown with reason of linkflap when the link
# has flapped link_flap_threshold times in the last link_flap_window
# seconds.
#
# Setting either threshold or window to 0 will disable the protection
#link_flap_window = 10
#link_flap_threshold = 0
